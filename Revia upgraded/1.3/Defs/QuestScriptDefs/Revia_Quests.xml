<?xml version="1.0" encoding="utf-8" ?>
<Defs>

<!-- Intro revia Empire -->
 <QuestScriptDef>
    <defName>Intro_Revia</defName>
    <defaultChallengeRating>1</defaultChallengeRating>
    <expireDaysRange>2</expireDaysRange>
    <isRootSpecial>true</isRootSpecial>
    <defaultCharity>true</defaultCharity>
    <questNameRules>
      <rulesStrings>
        <li>questName->the [adjAny] [rebelguy]</li>

        <!-- Pieces -->
		<li>adjAny->desparate</li>
		<li>adjAny->fleeing</li>
		<li>adjAny->bloody</li>
		<li>adjAny->escaping</li>
		
		
		<li>rebelguy->revian</li>
		<li>rebelguy->saboteur</li>
		<li>rebelguy->scout</li>
      </rulesStrings>
    </questNameRules>
	
    <questDescriptionRules>
      <include>
        <li>QuestHospitalityCommon</li>
      </include> 
      <rulesStrings>
        <li>questDescription->A member of the revia Empire has sabotaged an imperial celebration and is currently being chased by imperial troops. They contact you and say that if you protect them they will invite you to join the Empire ranks, allowing you to earn Revia titles, which come with unique rewards. This will anger the empire.</li>
      </rulesStrings>
    </questDescriptionRules>

    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_GetMap" />
        <li Class="QuestNode_GetWalkInSpot" />

        <!-- Require honor rewards enabled for this quest to run -->
        <li Class="QuestNode_RequireRoyalFavorFromFaction">
          <faction>ReviaEmpireFaction</faction>
        </li>

        <!-- Honor reward to accepter -->
        <li Class="QuestNode_Set">
          <name>royalFavorReward</name>
          <value>5</value>
        </li>

        <!-- Generate Asker -->
        <li Class="QuestNode_GeneratePawn">
          <kindDef>RE_ReviaRaceScout</kindDef>
          <storeAs>asker</storeAs>
          <faction>ReviaEmpireFaction</faction>
          <biocodeWeaponChance>1</biocodeWeaponChance>
          <biocodeApparelChance>1</biocodeApparelChance>

        </li>
		
        <li Class="QuestNode_PawnsArrive">
          <pawns>$asker</pawns>
          <joinPlayer>true</joinPlayer>
        </li>

        <!-- Asker leaves on cleanup -->
        <li Class="QuestNode_LeaveOnCleanup">
          <pawns>$asker</pawns>
          <sendStandardLetter>false</sendStandardLetter>
          <inSignalRemovePawn>asker.RanWild</inSignalRemovePawn>
        </li>

        <!-- Asker never does random mood caused mental breaks -->
        <li Class="QuestNode_DisableRandomMoodCausedMentalBreaks">
          <pawns>$asker</pawns>
        </li>
		
		
		        <!-- Empire becomes hostile -->
        <li Class="QuestNode_ChangeFactionGoodwill">
          <faction>Empire</faction>
          <change>-100</change>
          <canSendLetter>true</canSendLetter>
          <canSendMessage>false</canSendMessage>
          <ensureHostile>true</ensureHostile>
          <reason>AcceptedRevia</reason>
        </li>
		
		
        
        <!-- Spawn joiner 
        <li Class="QuestNode_PawnsArrive">
          <pawns>$asker</pawns>
          <walkInSpot>$walkInSpot</walkInSpot>
          <joinPlayer>true</joinPlayer>
          <customLetterText TKey="LetterLabelAskerBecameHostile">{BASETEXT}\n\nBecause you accepted [asker_nameDef], [asker_factionName] has become hostile.\n\nThe loyalty squad that is hunting [asker_objective] will arrive soon.</customLetterText>
          <isSingleReward>true</isSingleReward>
          <rewardDetailsHidden>true</rewardDetailsHidden>
        </li> -->
        
		
		
		
        <li Class="QuestNode_Set">
          <name>raidPoints</name>
          <value>350</value>
        </li>
		
		
        <!-- Raid -->
        <li Class="QuestNode_Set">
          <name>raidDelayTicks</name>
          <value>$(roundToTicksRough(randInt(1800, 2400)))</value>
        </li>
        <li Class="QuestNode_Delay">
          <delayTicks>$raidDelayTicks</delayTicks>
          <node Class="QuestNode_SubScript">
            <def>Util_Raid</def>
            <prefix>raid</prefix>
            <parms>
              <inSignal>$inSignal</inSignal>
              <map>$map</map>
              <enemyFaction>Empire</enemyFaction>
              <points>$raidPoints</points>
              <walkInSpot>$walkInSpot</walkInSpot>
              <customLetterLabel TKey="LetterLabelLoyaltySquad">{BASELABEL}: Imperial Order squad</customLetterLabel>
              <customLetterText TKey="LetterTextLoyaltySquad">{BASETEXT}\n\nThis is the Order squad that was hunting the revian [../asker_nameFull].
              </customLetterText>
            </parms>
          </node>
        </li>
			
		

        
        <!-- Shuttle -->
        <li Class="QuestNode_ShuttleDelay">
          <delayTicks>11500</delayTicks>
          <lodgers>$asker</lodgers>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_SubScript">
                <def>Util_TransportShip_Pickup</def>
                <parms>
                  <leaveDelayTicks>45000</leaveDelayTicks>
                  <requiredPawns>$asker</requiredPawns>
                  <leaveImmediatelyWhenSatisfied>true</leaveImmediatelyWhenSatisfied>
                </parms>
              </li>
              <li Class="QuestNode_InspectString">
                <targets>$asker</targets>
                <inspectString TKey="InspectStringDepartShuttle">Should depart on shuttle</inspectString>
              </li>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleArrived">Shuttle arrived</label>
                <text TKey="LetterTextShuttleArrived">The shuttle has arrived to collect [asker_nameDef].</text>
                <lookTargets>$pickupShipThing</lookTargets>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Home faction -->
        <li Class="QuestNode_ExtraFaction">
          <pawns>$asker</pawns>
          <factionType>HomeFaction</factionType>
          <faction>ReviaEmpireFaction</faction>
          <inSignalRemovePawn>asker.RanWild</inSignalRemovePawn>
        </li>

        <!-- Lock his apparel -->
        <li Class="QuestNode_SetAllApparelLocked">
          <pawns>$asker</pawns>
        </li>



        <!-- - - - - - - -  -->
        <!-- End conditions -->
        <!-- - - - - - - -  -->

        <!-- Asker died -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestDied">Guest died: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestDied">{SUBJECT_definite}, who you were charged to protect, has died. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Surgery Violation -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.SurgeryViolation</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelUnauthorizedSurgery">Unauthorized surgery: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextUnauthorizedSurgery">Unauthorized, violating surgery has been performed on {SUBJECT_definite}, who you were charged to protect. Because of this violation, [asker_pronoun] will now attempt to leave. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>PerformedHarmfulSurgery</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger arrested -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.Arrested</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelCaptured">Captured: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextCaptured">{SUBJECT_definite}, who you were charged to host, has been arrested. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnArrested</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Asker left map -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.LeftMap</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelGuestLost">Guest lost: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextGuestLost">{SUBJECT_definite}, who you were charged to protect, has left the designated settlement. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Lodger ran wild -->
        <li Class="QuestNode_Signal">
          <inSignal>asker.RanWild</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelLodgerRanWild">Guest lost: {SUBJECT_definite}</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextLodgerRanWild">{SUBJECT_definite}, who you were charged to protect, has run wild. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>QuestPawnLost</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Shuttle destroyed -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelShuttleDestroyed">Shuttle destroyed</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextShuttleDestroyed">The shuttle sent to collect [asker_nameDef] has been destroyed. [asker_pronoun] will now leave on foot. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>ShuttleDestroyed</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>

        <!-- Give honor to accepter (and development points if applicable) -->
        <li Class="QuestNode_GiveRoyalFavorAndDevelopmentPoints">
          <inSignal>pickupShipThing.SentSatisfied</inSignal>
          <giveToAccepter>true</giveToAccepter>
          <factionOf>$asker</factionOf>
          <amount>$royalFavorReward</amount>
          <isSingleReward>true</isSingleReward>
        </li>
        
        <!-- Shuttle sent -->
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentSatisfied</inSignal>
          <node Class="QuestNode_End">
            <outcome>Success</outcome>
            <sendStandardLetter>true</sendStandardLetter>
          </node>
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>pickupShipThing.SentUnsatisfied</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
                <letterDef>NegativeEvent</letterDef>
                <text TKey="LetterTextQuestFailed">The shuttle sent to collect [asker_nameDef] has departed without [asker_objective]. [asker_pronoun] will now leave on foot. [failLetterEndingCommon]</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
                <goodwillChangeAmount>-5</goodwillChangeAmount>
                <goodwillChangeFactionOf>$asker</goodwillChangeFactionOf>
                <goodwillChangeReason>MemberMissedShuttle</goodwillChangeReason>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>
  
<IncidentDef ParentName="GiveQuestBase">
    <defName>GiveQuest_Intro_Revia</defName>
    <label>fleeing revia</label>
    <questScriptDef>Intro_Revia</questScriptDef>
    <baseChance>0</baseChance> <!-- given by a special storyteller comp -->
  </IncidentDef>

<HistoryEventDef>
    <defName>AcceptedRevia</defName>
    <label>accepted revia</label>
  </HistoryEventDef>

<!-- Imperial outpost -->
 
<QuestScriptDef>
    <defName>RE_Quest_ImperialCamp</defName>
    <rootSelectionWeight>3.0</rootSelectionWeight>
    <rootMinPoints>750</rootMinPoints>
    <canGiveRoyalFavor>true</canGiveRoyalFavor>
    <expireDaysRange>4~8</expireDaysRange>
    <successHistoryEvent MayRequire="Ludeon.RimWorld.Ideology">Raided_BanditCamp</successHistoryEvent>
    <questNameRules>
      <rulesStrings>
        <li>questName->The [bandit] [camp]</li>
        <li>questName->[bandit] [camp]</li>
        <li>questName->[asker_nameDef] and the [bandit]  [camp]</li>
        <li>camp->Base</li>
        <li>camp->Outpost</li>
        <li>camp->Fort</li>
        <li>bandit->Imperial</li>
        <li>bandit->Empire's</li>
        <li>bandit->Wretched Stellarch's</li>
        <li>bandit->Slaving</li>
        <li>bandit->Wretched Empire's</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription->[asker_nameFull], [asker_faction_leaderTitle] of [asker_faction_name], has contacted us through an encrypted channel. The empire have established an outpost that they'll use to station their troops.\n\n[asker_nameDef] is asking us to sabotage the outpost, killing all enemies and turrets. [asker_label] says there may be valuables within, and that [sitePart0_description].</li>
      </rulesStrings>
    </questDescriptionRules>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_SubScript">
          <def>Util_RandomizePointsChallengeRating</def>
          <parms>
            <pointsFactorTwoStar>1.5</pointsFactorTwoStar>
            <pointsFactorThreeStar>2</pointsFactorThreeStar>
          </parms>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_AdjustPointsForDistantFight</def>
        </li>
        <li Class="QuestNode_GetMap" />

        <li Class="QuestNode_GetPawn">
          <storeAs>asker</storeAs>
          <mustBeFactionLeader>true</mustBeFactionLeader>
          <mustBeOfKind>RE_ReviaRaceMistress</mustBeOfKind>
          <allowPermanentEnemyFaction>false</allowPermanentEnemyFaction>
          <hostileWeight>0</hostileWeight>
        </li>
		
		
		
		
		
		
		
		
		
		
		       <!-- Site item stash contents -->

        <!-- Imperial site -->
        <li Class="QuestNode_GetSiteTile">
          <storeAs>siteTile</storeAs>
          <preferCloserTiles>true</preferCloserTiles>
        </li>
        <li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
          <storeAs>sitePartDefs</storeAs>
          <sitePartsTags>
            <li><tag>Outpost</tag></li>
            <li><tag>ItemStash</tag></li>
          </sitePartsTags>
        </li>
		
		
		
        <li Class="QuestNode_GetDefaultSitePartsParams">
          <tile>$siteTile</tile>
          <faction>Empire</faction>
          <sitePartDefs>$sitePartDefs</sitePartDefs>
          <storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
        </li>
		
		
		
        <li Class="QuestNode_GetSiteThreatPoints">
          <storeAs>sitePoints</storeAs>
          <sitePartsParams>$sitePartsParams</sitePartsParams>
        </li>
        <li Class="QuestNode_SubScript">
          <def>Util_GenerateSite</def>
          <parms>
            <siteFaction>Empire</siteFaction>
          </parms>
        </li>
        <li Class="QuestNode_SpawnWorldObjects">
          <worldObjects>$site</worldObjects>
        </li>
        <li Class="QuestNode_Signal">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <node Class="QuestNode_Notify_PlayerRaidedSomeone">
            <getRaidersFromMapParent>$site</getRaidersFromMapParent>
          </node>
        </li>

        <!-- Site expires -->
       

        <li Class="QuestNode_SignalActivable">
          <inSignal>site.MapRemoved</inSignal>
          <inSignalEnable>site.MapGenerated</inSignalEnable>
          <node Class="QuestNode_End">
            <outcome>Success</outcome>
          </node>
        </li>

		
		 <li Class="QuestNode_WorldObjectTimeout">
          <worldObject>$site</worldObject>
          <isQuestTimeout>true</isQuestTimeout>
          <delayTicks>$(60*60000)</delayTicks>
          <inSignalDisable>site.MapGenerated</inSignalDisable>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestExpired">Quest expired: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestExpired">The imperial outpost has packed up and moved on.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>
		
		
		

        <!-- If we enter and leave, the map is destroyed. Fail the quest. -->
        <li Class="QuestNode_Signal">
          <inSignal>site.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelQuestFailed">Quest failed: [resolvedQuestName]</label>
                <text TKey="LetterTextQuestFailed">After being discovered, the camp has dispersed. The quest [resolvedQuestName] has ended.</text>
              </li>
              <li Class="QuestNode_End">
                <outcome>Fail</outcome>
              </li>
            </nodes>
          </node>
        </li>

        <li Class="QuestNode_Signal">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Notify_PlayerRaidedSomeone">
                <getRaidersFromMapParent>$site</getRaidersFromMapParent>
              </li>
              <li Class="QuestNode_GiveRewards">
                <parms>
                  <allowGoodwill>true</allowGoodwill>
                  <allowRoyalFavor>true</allowRoyalFavor>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </parms>
                <addCampLootReward>true</addCampLootReward>
                <customLetterLabel TKey="LetterLabelPaymentArrived">Payment arrived</customLetterLabel>
                <customLetterText TKey="LetterTextPaymentArrived">You have defeated the camp!\n\nThe payment from [asker_faction_name] has arrived.</customLetterText>
                <nodeIfChosenPawnSignalUsed Class="QuestNode_Letter">
                  <letterDef>ChoosePawn</letterDef>
                  <label TKey="LetterLabelFavorReceiver">[asker_faction_royalFavorLabel]</label>
                  <text TKey="LetterTextFavorReceiver">These colonists participated in the victory for the quest [resolvedQuestName]. [asker_definite] wants to know who should receive the [royalFavorReward_amount] [asker_faction_royalFavorLabel] for this service.</text>
                  <useColonistsOnMap>$site</useColonistsOnMap>
                  <chosenPawnSignal>ChosenPawnForReward</chosenPawnSignal>
                </nodeIfChosenPawnSignalUsed>
              </li>
            </nodes>
          </node>
        </li>
        <li Class="QuestNode_End">
          <inSignal>site.AllEnemiesDefeated</inSignal>
          <outcome>Success</outcome>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>

<!-- Problem causer -->

  <QuestScriptDef>
    <defName>RE_Quest_ProblemCauser</defName>
    <rootSelectionWeight>0</rootSelectionWeight>
    <rootMinProgressScore>10</rootMinProgressScore>
    <rootMinPoints>500</rootMinPoints>
    <autoAccept>true</autoAccept>
    <questNameRules>
      <rulesStrings>
        <li>questName(siteFaction==Empire)->Imperial special forces with a [problemCauserLabel]</li>
      </rulesStrings>
    </questNameRules>
    <questDescriptionRules>
      <rulesStrings>
        <li>questDescription(siteFaction==Empire)->An imperial special forces unit have set up an forward base near [map_definite] to sabotage you. [allSitePartsDescriptions]\n\nThe base will continue to harass you until you send a team there to attack and destroy it.</li>
      </rulesStrings>
    </questDescriptionRules>
    <questAvailableLetterDef>NewQuest_ThreatBig</questAvailableLetterDef>
    <root Class="QuestNode_Sequence">
      <nodes>
        <li Class="QuestNode_Set">
          <name>siteDistRange</name>
          <value>1~10</value>
        </li>

        <li Class="QuestNode_FactionExists">
          <faction>Empire</faction>
          <node Class="QuestNode_Set">
            <name>selectionWeightEmpire</name>
            <value>1</value>
          </node>
          <elseNode Class="QuestNode_Set">
            <name>selectionWeightEmpire</name>
            <value>0</value>
          </elseNode>
        </li>

        <li Class="QuestNode_GetMap" />
        <li Class="QuestNode_RandomNode">
          <nodes>
            <li Class="QuestNode_Sequence">
              <nodes>
                <li Class="QuestNode_Set">
                  <name>siteFaction</name>
                  <value>Empire</value>
                </li>
                <li Class="QuestNode_Set">
                  <name>sitePartsTags</name>
                  <value>
                    <li>
                      <tag>QuestConditionCauser</tag>
                    </li>
                    <li>
                      <tag>Outpost</tag>
                    </li>
                  </value>
                </li>
              </nodes>
              <selectionWeight>$selectionWeightEmpire</selectionWeight>
            </li>
    
          </nodes>
        </li>

        <li Class="QuestNode_QuestUnique">
          <tag>ProblemCauser</tag>
          <faction>$siteFaction</faction>
        </li>

        <li Class="QuestNode_GetSitePartDefsByTagsAndFaction">
          <storeAs>sitePartDefs</storeAs>
          <sitePartsTags>$sitePartsTags</sitePartsTags>
        </li>
        
        <li Class="QuestNode_GetSiteTile">
          <storeAs>siteTile</storeAs>
<!--		  <faction>Empire</faction> -->
          <clampRangeBySiteParts>true</clampRangeBySiteParts>
          <sitePartDefs>$sitePartDefs</sitePartDefs>
        </li>

        <li Class="QuestNode_GetDefaultSitePartsParams">
          <tile>$siteTile</tile>
          <faction>Empire</faction>
          <sitePartDefs>$sitePartDefs</sitePartDefs>
          <storeSitePartsParamsAs>sitePartsParams</storeSitePartsParamsAs>
        </li>

        <li Class="QuestNode_SubScript">
          <def>Util_GenerateSite</def>
          <parms>
            <hiddenSitePartsPossible>false</hiddenSitePartsPossible>
          </parms>
        </li>

        <li Class="QuestNode_SpawnWorldObjects">
          <worldObjects>$site</worldObjects>
        </li>
        
        <li Class="QuestNode_Signal">
          <inSignal>conditionCauser.Destroyed</inSignal>
          <node Class="QuestNode_Sequence">
            <nodes>
              <li Class="QuestNode_Letter">
                <label TKey="LetterLabelSuccess">[problemCauserLabel] destroyed</label>
                <letterDef>PositiveEvent</letterDef>
                <text TKey="LetterTextSuccess">You have destroyed the imperial [problemCauserLabel] that was affecting [map_definite]!</text>
              </li>
              <li Class="QuestNode_Notify_PlayerRaidedSomeone">
                <getRaidersFromMapParent>$site</getRaidersFromMapParent>
              </li>
              <li Class="QuestNode_End">
                <outcome>Success</outcome>
              </li>
            </nodes>
          </node>
        </li>
      </nodes>
    </root>
  </QuestScriptDef>

  <IncidentDef>
    <defName>RE_Incident_ProblemCauser</defName>
    <label>problem causer</label>
    <targetTags>
      <li>Map_PlayerHome</li>
    </targetTags>
    <workerClass>IncidentWorker_GiveQuest_Map</workerClass>
    <questScriptDef>RE_Quest_ProblemCauser</questScriptDef>
    <baseChance>0</baseChance>
    <letterDef>NewQuest_ThreatBig</letterDef>
    <baseChanceWithRoyalty>0.95</baseChanceWithRoyalty>
    <category>ThreatBig</category>
    <minThreatPoints>800</minThreatPoints>
    <minPopulation>5</minPopulation>
    <minRefireDays>30</minRefireDays>
    <earliestDay>15</earliestDay>
    <pointsScaleable>true</pointsScaleable>
  </IncidentDef>

<!--  ehh i surender


  <QuestScriptDef>
  <defName>RE_Techprint_Gift</defName>
  <defaultChallengeRating>4</defaultChallengeRating>
  <isRootSpecial>true</isRootSpecial>
  <questNameRules>
    <rulesStrings>
      <li>questName(sameQuestsCount>=1)->Royal [titleEnd]</li>
      <li>titleEnd->Trust</li>
      <li>titleEnd->Gift</li>
      <li>titleEnd->achievement</li>
    </rulesStrings>
  </questNameRules>
  <questDescriptionRules>
    <rulesStrings>
      <li>questDescription->[intro]The [asker_faction_leaderTitle] of [asker_faction_name] will trust you enough to give you their technology due to your title</li>
    </rulesStrings>
  </questDescriptionRules>
  <root Class="QuestNode_Sequence">
  <nodes>
    <li Class="QuestNode_GetFaction">
      <storeAs>faction</storeAs>
      <allowEnemy>false</allowEnemy>
      <allowNeutral>true</allowNeutral>
      <allowAlly>true</allowAlly>
    </li>

    <li Class="QuestNode_RequirementsToAcceptColonistWithTitle">
      <minimumTitle>Revia_Six</minimumTitle>
      <faction>ReviaEmpireFaction</faction>
    </li>

  </nodes>

  -->
</Defs>